<?xml version="1.0" encoding="UTF-8"?>
<!--
  Licensed to the Apache Software Foundation (ASF) under one or more
  contributor license agreements.  See the NOTICE file distributed with
  this work for additional information regarding copyright ownership.
  The ASF licenses this file to You under the Apache License, Version 2.0
  (the "License"); you may not use this file except in compliance with
  the License.  You may obtain a copy of the License at

      http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License.
-->
<!DOCTYPE document [
  <!ENTITY project SYSTEM "project.xml">
]>
<document url="setup.html">

  &project;

  <properties>
    <author email="remm@apache.org">Remy Maucherat</author>
    <title>Tomcat安装</title>
  </properties>

<body>

<section name="目录">
<toc/>
</section>

  <section name="简介">
    <p>
      在不同平台上安装Tomcat有多种方式。为此，主要的文档是
      <a href="RUNNING.txt">RUNNING.txt</a>。如果以下信息不能回答你的问题，我们鼓励你参考该文件。 
    </p>
  </section>

  <section name="Windows">

    <p>
      在Windows上，使用Windows安装程序可以轻易地安装Tomcat。它的界面和功能与其它基于安装程序的向导相似，
			仅需关注一些信息即可。
    </p>

    <p>
      <ul>
        <li><strong>安装为系统服务</strong>: 无论选择哪种设置，Tomcat会被作为Windows服务进行安装。
						勾选组件页中复选框，将服务设置为“自动”启动，Tomcat将随Windows自启动。
						出于安全考虑，服务应该以独立的用户身份运行，且其权限应被限制(见Windows服务管理工具及其相关文档)。
            </li>
        <li><strong>Java位置</strong>: 安装程序将提供缺省的JRE以用作服务的运行。
				安装程序使用注册表来确定Java 6及以上的JRE的路径，包括作为整个JDK一部分的JRE。
				在运行64位的操作系统上，安装程序首先将查找64位的JRE，并仅在找不到时才查找32位的JRE。
				安装程序未必使用侦测到的缺省的JRE。任何已安装的Java 6及以上JRE(32位或者64位)都可被使用。
            </li>
        <li><strong>通知栏图标</strong>: 当Tomcat以系统服务方式运行时，在通知栏不会出现图标。
						注意在安装结尾选择运行Tomcat，通知栏图标将被使用，即使Tomcat被安装作为系统服务。
            </li>
        <li>参考
            <a href="windows-service-howto.html">Windows Service HOW-TO</a>
            ，获取更多的关于如何管理Tomcat作为系统服务。
            </li>
      </ul>
    </p>

    <p>安装程序将创建快捷方式，以允许启动和配置Tomcat。值得注意的是，
			Tomcat对web应用的管理仅在Tomcat运行时有效。</p>

  </section>

  <section name="Unix守护进程">

    <p>通过使用commons-daemon项目中的jsvc工具，Tomcat可以作为守护进程运行。
       Tomcat程序包中含有jsvc的源代码tar文件，必须经过编译才可使用。
			 编译jsvc，需要C ANSI编译器(比如GCC)、GNU Autoconf以及JDK。</p>

    <p>在运行脚本前，应设置<code>JAVA_HOME</code>环境变量指向JDK的安装目录。
		   或者，当调用<code>./configure</code>脚本时，通过使用<code>--with-java</code>参数来指定JDK的路径，
			 比如，<code>./configure --with-java=/usr/java</code>。</p>

    <p>使用以下命令将编译jsvc，并置于<code>$CATALINA_HOME/bin</code>目录中。
			 这里假定使用GNU TAR，并且<code>CATALINA_HOME</code>用作环境变量指向Tomcat的安装目录。
       </p>

    <p>请注意你应该使用GNU make (gmake)，而不是FreeBSD系统中本身的BSD make</p>

<source>
    cd $CATALINA_HOME/bin
    tar xvfz commons-daemon-native.tar.gz
    cd commons-daemon-1.0.x-native-src/unix
    ./configure
    make
    cp jsvc ../..
    cd ../..
</source>

    <p>使用以下命令，Tomcat将作为守护进程运行。</p>

<source>
    CATALINA_BASE=$CATALINA_HOME
    cd $CATALINA_HOME
    ./bin/jsvc \
        -classpath $CATALINA_HOME/bin/bootstrap.jar:$CATALINA_HOME/bin/tomcat-juli.jar \
        -outfile $CATALINA_BASE/logs/catalina.out \
        -errfile $CATALINA_BASE/logs/catalina.err \
        -Dcatalina.home=$CATALINA_HOME \
        -Dcatalina.base=$CATALINA_BASE \
        -Djava.util.logging.manager=org.apache.juli.ClassLoaderLogManager \
        -Djava.util.logging.config.file=$CATALINA_BASE/conf/logging.properties \
        org.apache.catalina.startup.Bootstrap
</source>

    <p>如果JVM用作服务器VM而不是客户机VM，你也可指定<code>-jvm server</code>。
       可在OSX中看到这种用法。</p>

    <p>jsvc还有其它有用的参数，比如<code>-user</code>。该参数在守护进程初始化完成后，
		   将它切换给另一个用户。例如，这将允许运行Tomcat的无权限用户使用受限的端口。
			 注意如果你使用该选项并以root用户来启动Tomcat，你需要禁用
       <code>org.apache.catalina.security.SecurityListener</code>检查项，以阻止
       root用户启动和运行。</p>

    <p><code>jsvc --help</code>将返回jsvc完整使用信息。特别地，
       <code>-debug</code>选项对于调试jsvc运行出现的问题非常有用。
			 </p>


    <p><code>$CATALINA_HOME/bin/daemon.sh</code>文件用作在使用jsvc从
			 <code>/etc/init.d</code>启动时，自动启动Tomcat的启动模板。
       </p>

    <p>注意以此种方式运行Tomcat，Commons-Daemon JAR文件必须在你运行时类路径(classpath)中。
			 Commons-Daemon JAR文件在bootstrap.jar manifest的Class-Path实体中。
			 如果你在执行jsvc时遇到针对Commons-Daemon的ClassNotFoundException或者NoClassDefFoundError，
			 请通过-cp参数将Commons-Daemon JAR设置到类路径中。</p>

  </section>

</body>
</document>
